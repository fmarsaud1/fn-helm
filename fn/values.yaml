# Default values for Fn
imagePullPolicy: IfNotPresent

fn:
  service:
    port: 80
    type: LoadBalancer
    annotations: {}

fnlb:
  image: fnproject/fnlb:0.0.189

fnserver:
  image: fnproject/fnserver:0.3.227  #TAG-fnserver-image
  logLevel: info
  resources: {}
  nodeSelector: {}
  tolerations: []


ui:
  enabled: true
  fnui:
    image: fnproject/ui:0.0.21  #TAG-fnui-image
    resources: {}
  flowui:
    image: fnproject/flow:ui #TAG-flowui-image
    resources: {}
  service:
    flowuiPort: 3000
    fnuiPort: 4000
    type: LoadBalancer
    annotations: {}


flow:
  image: fnproject/flow:0.1.75  #TAG-flow-image
  logLevel: info
  service:
    port: 80
    type: ClusterIP
    annotations: {}
  resources: {}


##
## MySQL chart configuration
##
mysql:
  enabled: true
  persistence:
    enabled: false
    nodeSelector: mysql-storage
    ## If defined, volume.beta.kubernetes.io/storage-class: <storageClass>
    ## Default: volume.alpha.kubernetes.io/storage-class: default
    ##
    # storageClass:
    storageClass: mysql
    accessMode: ReadWriteOnce
    size: 8Gi

  mysqlDatabase: fndb
  mysqlUser: fnapp
  mysqlPassword: boomsauce

# The kind of installation: using the standard mysql images,
# or the mysql-operator
mysql_operator:
  enabled: false

  # For the moment, the database settings are taken from the mysql stanza above:
  # mysqlDatabase
  # mysqlUser
  # mysqlPassword

  replicas: 3

  backup:
    enabled: false
    schedule: '*/5 * * * *'
    endpoint: foo.bar.example.com
    region: bar
    bucket: backups
    access_key: baz
    secret_key: quux

##
## Redis chart configuration
##
redis:
  persistence:
    enabled: false
    nodeSelector: redis-storage
    storageClass: redis
    accessMode: ReadWriteOnce
    size: 8Gi
  usePassword: false

## Ingress configuration.
## ref: https://kubernetes.io/docs/user-guide/ingress/
##
ingress:
  enabled: false
